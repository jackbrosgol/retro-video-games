-- title: Frogger Remake
-- desc: TIC80 version of frogger
-- author: Jackson Brosgol and Kenneth Barkdoll 
-- script: lua

titlePage = 1
overTime = 100
px=120
py=112
speed = {val=0} -- num pixels
frogSpeed = 1
time = 0
itrs = 0

player = {lives=3, x= 0, y = 0}
moving = -1
death = 0
deathTime = -1
score = 0
miny = 112
checkContact = true
animationCycle = 240



gamble = false
-- frogger = {x1=120, x2=120, x3=120, x4=120, x5=120, y1=112, y2=112, y3=112, y4=112, y5=112}

-- car classes: contain starting coordinates of the cars
car1={x1=32,x2=90,y=104,t=0}
car2={x1=192,x2=100,y=96,t=0}
car3={x1=56,x2=120,y=88,t=0}
car4={x1=170,x2=75,y=80,t=0}
car5={x1=40,x2=160,y=72,t=0}

log1 = {x1=32, x2=96, x3=160, y=56, t=0}
log2 = {x1=0, x2=110, x3=160, y=24, t=0}
log3 = {x1=32, x2=120, x3=0, y=40, t=0}
playerState = nil

allg = {x1=32,x2=0,x3=0, y=24, t=0}

-- turtles
turtles1 = {x1=48, x2=100, x3=180, y=48, t=0, r=0}
turtles2 = {x1=48, x2=100, x3=180, y=32, t=0}
blueTurtles = {x1=0, x2=100, x3=180, y=48, t=0, r=0}


home1 = false home2 = false home3=false home4=false home5=false

-- 240 x 136

-- Make functions for car movement and checking deaths
function titleScreen()
	map(30,0,60,17)
	spr(48,40,56,0,1,0,0,2,4)
	spr(50,64,56,0,1,0,0,2,4)
	spr(52,88,56,0,1,0,0,2,4)
	spr(54,112,56,0,1,0,0,2,4)
	spr(54,136,56,0,1,0,0,2,4)
	spr(56,160,56,0,1,0,0,2,4)
	spr(50,184,56,0,1,0,0,2,4)
	spr(58,204,56,0,1,0,0,2,4)
	print("Press any arrow key to begin!", 47, 97, 06)
	print("Press any arrow key to begin!", 46, 96, 05)
	if btnp(0) or btnp(1) or btnp(2) or btnp(3) or btnp(4) or btnp(5) or btnp(6) or btnp(7) then
		titlePage = 0
	end
	
end


function gameOver()
	print(gamble, 0, 0)
	cls()
	-- print("hello",100,12)
	if gamble == false then
		cls()
		print("GAME OVER", 90,30, 12)
		print("SCORE: " .. score, 89,40, 12)
		print("Would you like to risk 1000 points for one", 8, 70, 12)
		print("more life?", 92, 78, 12)
		print("Left Arrow = Yes", 20, 100, 12)
		print("Right Arrow = No", 140, 100, 12)
		if btnp(2) then 
			gamble = true 
			score = score - 1000
			player.lives = 1
			px=120
			py=112
			playGame()
		elseif btnp(3) then 
			gamble = true
			gameOver()
		end
	else 
		cls()
		print("GAME OVER", 89,30, 12)
		print("SCORE: " .. score, 90,40, 12)
		if overTime == 0 then
			if btnp(0) or btnp(1) or btnp(2) or btnp(3) or btnp(4) or btnp(5) or btnp(6) or btnp(7) then
				titlePage = 1
				player.lives = 3
				gamble = false
				overTime = 100
			end
			print("Press any key to start again.", 40,80, 12)
			score = 0
		else
			overTime = overTime - 1
		end
	end 
end

function max(a, b)
	if a > b then
		return a
	else
		return b
	end
end

-- Function that makes all 5 car classes move continously; when they reach the end of the screen, they return
-- to the start of the screen
-- edgeLength and startLength have to do with how many units the car has between its 'center' and endge
function moveCars(car, direction,carSpeed,edgeLength,startLength)
	if direction == 'right' then
		if car.t > 1 then
			car.x1 = car.x1 + carSpeed
			car.x2 = car.x2 + carSpeed
		end
		car.t = car.t + 1
		if car.t>2 then car.t=0 end
		if car.x1 > 224-edgeLength then car.x1 = 16 end
		if car.x2 > 224-edgeLength then car.x2 = 16 end
	else
		if car.t > 1 then
			car.x1 = car.x1 - carSpeed
			car.x2 = car.x2 - carSpeed
		end
		car.t = car.t + 1
		if car.t>2 then car.t=0 end
		if car.x1 < 16+edgeLength then car.x1 = 224-startLength end
		if car.x2 < 16+edgeLength then car.x2 = 224-startLength end
	end
		
end

-- checks if frogger collided with a car; lWidth and rWidth are for the edges of the pixels (car.x1 would
-- be the center of the pixel, which is 8 units wide)
function carCollision(car,lWidth,rWidth)
	if ( (px >= car.x1-lWidth and px <=car.x1+rWidth) and py == car.y) or 
	( (px>=car.x2-lWidth and px<=car.x2+rWidth) and py == car.y) then 
		spr(371,px,py,0,1,0,0,1,1) 

		spr(372,px,py,0,1,0,0,1,1) 

		spr(373,px,py,0,1,0,0,1,1) 
		player.lives = player.lives - 1
		sfx(0,2,30,0,15,0)
		death = 1
		checkContact = false
	end
end

function restart()
	px = 120 py = 112
	itrs = 0 time = 0 
	miny = 112
end

-- Checks if frogger reached 1 of the 5 homes, gives a cussion on the x,y coordinates of 2
function checkHome()
	if py == 16 then
		if (px >= 37 and px <=43) and home1 == false then
			home1 = true
			score = score + 600
			sfx(2,60,45,0,15,0)
			restart()
		elseif (px >= 77 and px <=83) and home2 == false then
			home2 = true
			score = score + 400
			sfx(2,60,45,0,15,0)
			restart()
		elseif (px >= 117 and px <=123) and home3 == false then
			home3 = true
			score = score + 200
			sfx(2,60,45,0,15,0)
			restart()
		elseif (px >= 157 and px <=163) and home4 == false then
			home4 = true
			score = score + 300
			sfx(2,60,45,0,15,0)
			restart()
		elseif (px >= 197 and px <=203) and home5 == false then
			home5 = true
			score = score + 500
			sfx(2,60,45,0,15,0)
			restart()
		else 
			if death == 0 then
				player.lives = player.lives-1
				sfx(0,2,30,0,15,0)
				death = 1
				checkContact = false
			end
		end

	end

	if home1 == true then
		spr(353,40,16,0,1,0,0,1,1) 
	else
		spr(359,40,16,0,1,0,0,1,1)
	end
	if home2 == true then
		spr(353,80,16,0,1,0,0,1,1) 
	else
		spr(359,80,16,0,1,0,0,1,1) 
	end
	if home3 == true then
		spr(353,120,16,0,1,0,0,1,1) 
	else
		spr(359,120,16,0,1,0,0,1,1) 
	end
	if home4 == true then
		spr(353,160,16,0,1,0,0,1,1) 
	else
		spr(359,160,16,0,1,0,0,1,1) 
	end
	if home5 == true then
		spr(353,200,16,0,1,0,0,1,1) 
	else
		spr(359,200,16,0,1,0,0,1,1)  
	end

end

-- same thing as move cars but for logs and lilly pads
function moveLogs(log, direction, logSpeed, edgeLength, startLength)
	if direction == 'right' then
		if log.t > 1 then
			log.x1 = log.x1 + logSpeed
			log.x2 = log.x2 + logSpeed
			log.x3 = log.x3 + logSpeed
		end
		log.t = log.t + 1
		if log.t>2 then log.t=0 end
		if log.x1 > 240-edgeLength then log.x1 = 0 end
		if log.x2 > 240-edgeLength then log.x2 = 0 end
		if log.x3 > 240-edgeLength then log.x3 = 0 end
	else
		if log.t > 1 then
			log.x1 = log.x1 - logSpeed
			log.x2 = log.x2 - logSpeed
			log.x3 = log.x3 - logSpeed
		end
		log.t = log.t + 1
		if log.t>2 then log.t=0 end
		if log.x1 < 0+edgeLength then log.x1 = 240-startLength end
		if log.x2 < 0+edgeLength then log.x2 = 240-startLength end
		if log.x3 < 0+edgeLength then log.x3 = 240-startLength end
	end
		
end


function checkLogContact()

	-- log1
	if py == 56 then
		playerState = log1
		if px >= log1.x1-4 and px <=log1.x1+4 then
			px = log1.x1
		elseif px >= log1.x1+4 and px <=log1.x1+12 then
			px = log1.x1+8
		elseif px >= log1.x2-4 and px <=log1.x2+4 then
			px = log1.x2
		elseif px >= log1.x2+4 and px <=log1.x2+12 then
			px = log1.x2+8
		elseif px >= log1.x3-4 and px <=log1.x3+4 then
			px = log1.x3
		elseif px >= log1.x3+4 and px <=log1.x3+12 then
			px = log1.x3+8

		else
			player.lives = player.lives-1
			sfx(0,2,30,0,15,0)
			death = 2
			checkContact = false
		end

	--turtles1
	elseif py == 48 then
		playerState = turtles1
		if px >= turtles1.x1-4 and px <=turtles1.x1+4 then
			px = turtles1.x1
		elseif px >= turtles1.x1+4 and px <=turtles1.x1+12 then
			px = turtles1.x1+8
		elseif px >= turtles1.x1+12 and px <=turtles1.x1+20 then
			px = turtles1.x1+16

		elseif px >= turtles1.x2-4 and px <=turtles1.x2+4 and turtles1.r <= 350 then
			px = turtles1.x2
		elseif px >= turtles1.x2+4 and px <=turtles1.x2+12 and turtles1.r <= 350 then
			px = turtles1.x2+8
		elseif px >= turtles1.x2+12 and px <=turtles1.x2+20 and turtles1.r <= 350 then
			px = turtles1.x2+16

		elseif px >= turtles1.x3-4 and px <=turtles1.x3+4 then
			px = turtles1.x3
		elseif px >= turtles1.x3+4 and px <=turtles1.x3+12 then
			px = turtles1.x3+8
		elseif px >= turtles1.x3+12 and px <=turtles1.x3+20 then
			px = turtles1.x3+16

		else
			player.lives = player.lives-1
			sfx(0,2,30,0,15,0)
			death = 2
			checkContact = false
		end

	--big log
	elseif py == 40 then
		playerState = log3
		if px >= log3.x1-4 and px <=log3.x1+4 then
			px = log3.x1
		elseif px >= log3.x1+4 and px <=log3.x1+12 then
			px = log3.x1+8
		elseif px >= log3.x1+12 and px <=log3.x1+20 then
			px = log3.x1+16
		elseif px >= log3.x1+20 and px <=log3.x1+28 then
			px = log3.x1+24

		elseif px >= log3.x2-4 and px <=log3.x2+4 then
			px = log3.x2
		elseif px >= log3.x2+4 and px <=log3.x2+12 then
			px = log3.x2+8
		elseif px >= log3.x2+12 and px <=log3.x2+20 then
			px = log3.x2+16
		elseif px >= log3.x2+20 and px <=log3.x2+28 then
			px = log3.x2+24

		else
			player.lives = player.lives-1
			sfx(0,2,30,0,15,0)
			death = 2
			checkContact = false
		end

	-- turtles2
	elseif py == 32 then
		playerState = turtles2
		if px >= turtles2.x1-4 and px <=turtles2.x1+4 then
			px = turtles2.x1
		elseif px >= turtles2.x1+4 and px <=turtles2.x1+12 then
			px = turtles2.x1+8
		elseif px >= turtles2.x1+12 and px <=turtles2.x1+20 then
			px = turtles2.x1+16

		elseif px >= turtles2.x2-4 and px <=turtles2.x2+4 then
			px = turtles2.x2
		elseif px >= turtles2.x2+4 and px <=turtles2.x2+12 then
			px = turtles2.x2+8
		elseif px >= turtles2.x2+12 and px <=turtles2.x2+20 then
			px = turtles2.x2+16

		elseif px >= turtles2.x3-4 and px <=turtles2.x3+4 then
			px = turtles2.x3
		elseif px >= turtles2.x3+4 and px <=turtles2.x3+12 then
			px = turtles2.x3+8
		elseif px >= turtles2.x3+12 and px <=turtles2.x3+20 then
			px = turtles2.x3+16

		else
			player.lives = player.lives-1
			sfx(0,2,30,0,15,0)
			death = 2
			checkContact = false
		end

	-- medium log
	elseif py == 24 then
		playerState = log2
		if px >= allg.x1-4 and px <=allg.x1+4 then
			px = allg.x1
		elseif px >= allg.x1+4 and px <=allg.x1+12 then
			px = allg.x1+8
		-- elseif px >= log2.x1+12 and px <=log2.x1+20 then
		-- 	px = log2.x1+16

		elseif px >= log2.x2-4 and px <=log2.x2+4 then
			px = log2.x2
		elseif px >= log2.x2+4 and px <=log2.x2+12 then
			px = log2.x2+8
		elseif px >= log2.x2+12 and px <=log2.x2+20 then
			px = log2.x2+16

		elseif px >= log2.x3-4 and px <=log2.x3+4 then
			px = log2.x3
		elseif px >= log2.x3+4 and px <=log2.x3+12 then
			px = log2.x3+8
		elseif px >= log2.x3+12 and px <=log2.x3+20 then
			px = log2.x3+16

		else
			player.lives = player.lives-1
			sfx(0,2,30,0,15,0)
			death = 2
			checkContact = false
		end


	end

end

-- make sure frogger doesn't go outside the boundaries
function checkFroggerXY()
	if px < 32 or px > 208 or py > 112 then
		player.lives = player.lives-1
		sfx(0,2,30,0,15,0)
		itrs = 0 time = 0 
		px = 120 py = 112
		miny = 112
	end

end 
	
function gameWin()
	cls()
	speed.val = speed.val + 0.3
	home1 = false home2 = false home3=false home4=false home5=false
	playGame()
	-- print("You Win!", 100,60)
	-- print("Score: " .. score * player.lives, 90,68)
end


function playGame()
	cls()
	-- background
	map(0,0,30,17)

	
	-- cars
	spr(258, car1.x1, car1.y) --1
	spr(258,car1.x2, car1.y) --1
	spr(259, car2.x1, car2.y) --2
	spr(259, car2.x2, car2.y) --2
	spr(260, car3.x1, car3.y,0,1,1,0,2,1) --3
	spr(260, car3.x2, car3.y,0,1,1,0,2,1) --3
	spr(262, car4.x1, car4.y,0,1,0,0,2,1) --4
	spr(262, car4.x2, car4.y,0,1,0,0,2,1) --4
	spr(264, car5.x1, car5.y,0,1,0,0,2,1) --5
	spr(264, car5.x2, car5.y,0,1,0,0,2,1) --5
	--logs
	spr(289, log1.x1, log1.y,0,1,1,0,2,1) --1
	spr(289, log1.x2, log1.y,0,1,1,0,2,1) --1
	spr(289, log1.x3, log1.y,0,1,1,0,2,1) --1
	--spr(292, log2.x1, log2.y,0,1,1,0,3,1) --2
	spr(292, log2.x2, log2.y,0,1,1,0,3,1) --2
	spr(292, log2.x3, log2.y,0,1,1,0,3,1) --2
	spr(297, log3.x1, log3.y,0,1,1,0,4,1) --3
	spr(297, log3.x2, log3.y,0,1,1,0,4,1) --3
	--alligator
	if animationCycle > 160 then
		spr(361, allg.x1, allg.y,0,1,0,0,4,1)
	else
		spr(326, allg.x1, allg.y,0,1,0,0,4,1)
	end
	-- spr(297, log3.x3, log1.y,0,1,1,0,4,1) --3
	--turtles
	spr(266, turtles1.x1, turtles1.y,0,1,0,0,3,1) --t1
	--spr(266, turtles1.x2, turtles1.y,0,1,0,0,3,1) --t1
	spr(266, turtles1.x3, turtles1.y,0,1,0,0,3,1) --t1
	spr(266, turtles2.x1, turtles2.y,0,1,0,0,3,1) --t2
	spr(266, turtles2.x2, turtles2.y,0,1,0,0,3,1) --t2
	spr(266, turtles2.x3, turtles2.y,0,1,0,0,3,1) --t2
	-- create blue
	turtles1.r = turtles1.r + 1
	if turtles1.r > 350 then 
		spr(331, blueTurtles.x2, blueTurtles.y,0,1,0,0,3,1) --bt
	else 
		spr(266, turtles1.x2, turtles1.y,0,1,0,0,3,1) --t1
	end
	if turtles1.r > 470 then 
		turtles1.r = 0
	end

	
	-- background coverup
	for i = 24, 104, 8 do
		spr(321,0,i,0,1,0,0,4,1)
		spr(321,216,i,0,1,0,0,3,1)
	end
	--changed to a for loop
	--[[
	spr(321,0,32,0,1,0,0,4,1)
	spr(321,0,40,0,1,0,0,4,1)
	spr(321,0,48,0,1,0,0,4,1)
	spr(321,0,56,0,1,0,0,4,1)
	spr(321,216,24,0,1,0,0,3,1)
	spr(321,216,32,0,1,0,0,3,1)
	spr(321,216,40,0,1,0,0,3,1)
	spr(321,216,48,0,1,0,0,3,1)
	spr(321,216,56,0,1,0,0,3,1)
	spr(321,0,72,0,1,0,0,4,1)
	spr(321,0,80,0,1,0,0,4,1)
	spr(321,0,88,0,1,0,0,4,1)
	spr(321,0,96,0,1,0,0,4,1)
	spr(321,0,104,0,1,0,0,4,1)
	spr(321,216,72,0,1,0,0,3,1)
	spr(321,216,80,0,1,0,0,3,1)
	spr(321,216,88,0,1,0,0,3,1)
	spr(321,216,96,0,1,0,0,3,1)
	spr(321,216,104,0,1,0,0,3,1)
	--]]

	-- up=0, down=1, left=2, right=3
	-- clicks you into grid if you are jumping down from logs
	if py == 65 and moving == 1 then
		if (px + player.x) % 8 < 4 then
			px = (px + player.x) // 8
			player.x = 0
		else
			px = (px + player.x) // 8 + 8
			player.x = 0
		end
	end
	-- regular movement
	if death == 0 then 
		done = false
		--check if movement is finished
		if player.x== 8 or player.x == -8 then
			px = px + player.x
			player.x = 0
			done = true
		end
		if player.y == 8 or player.y == -8 then
			py = py + player.y
			player.y = 0
			done = true
		end
		--[[
		if player.x == -8 then
			px = px - 8
			player.x = 0
			done = true
		end
		if player.y == -8 then
			py = py - 8
			player.y = 0
			done = true
		end
		--]]
		if done then
			moving = -1
		end
		--if movement finished, check next move
		if moving == -1 then
			if btnp(0) then 
				moving = 0
			end
			if btnp(1) then 
				moving = 1
			end
			if btnp(2) then 
				moving = 2
			end
			if btnp(3) then 
				moving = 3
			end
		end
		--each movement characteristic
		if moving == 0 then 
			player.y = player.y - frogSpeed 
			if py < miny then
				score = score + 10
				miny = miny - 8
			end
			sfx(1,30,8,0,15,0)
			pr = 0
			spr(404-((math.abs(player.y) // 2)), px + player.x, py + player.y,0,1,0,pr,1,2)
		elseif moving == 1 then 
			player.y = player.y + frogSpeed 
			sfx(1,30,8,0,15,0) 
			pr = 2
			spr(404-((math.abs(player.y) // 2)), px + player.x, py + player.y-8,0,1,0,pr,1,2)
		elseif moving == 2 then 
			player.x = player.x - frogSpeed 
			sfx(1,30,8,0,15,0) 
			pr = 3
			spr(404-((math.abs(player.x) // 2)), px + player.x, py + player.y,0,1,0,pr,1,2)
		elseif moving == 3 then 
			player.x = player.x + frogSpeed 
			sfx(1,30,8,0,15,0) 
			pr = 1
			spr(404-((math.abs(player.x) // 2)), px + player.x-8, py + player.y,0,1,0,pr,1,2)
		else
			spr(257,px + player.x, py + player.y,0,1,0,pr,1,1) 
		--spr(404-((max(px%8, py%8) // 2)), px, py,0,1,0,pr,1,2)
		end
	-- road death animation cycle
	elseif death == 1 then
		if deathTime == -1 then
			deathTime = 80
		elseif deathTime ~= 0 then
			deathTime = deathTime - 1
			spr(374-(deathTime // 20), px + player.x, py + player.y,0,1,0,0,1,1)
		else
			deathTime = -1
			death = 0
			px = 120 py=112 
			itrs = 0 time = 0
			miny = 112
			checkContact = true
		end
	-- water death animation cycle
	else
		if deathTime == -1 then
			deathTime = 80
		elseif deathTime ~= 0 then
			deathTime = deathTime - 1
			spr(358-(deathTime// 20), px + player.x, py + player.y,0,1,0,0,1,1)
		else
			deathTime = -1
			death = 0
			px = 120 py=112 
			itrs = 0 time = 0
			miny = 112
			checkContact = true
		end
	end

	


	-- Car Movement
	moveCars(car1, 'right',speed.val + 1,0,0)
	moveCars(car2, 'left',speed.val + 1,0,0)
	moveCars(car3,'right',speed.val + 1.5,8,0)
	moveCars(car4,'left',speed.val + 3,-4,6)
	moveCars(car5,'right',speed.val + 2,3,0)

	moveLogs(log1, 'right',speed.val + 1.5, 8, 0)
	moveLogs(log2, 'right',speed.val + 1.25, 16, 0)
	moveLogs(log3, 'right',speed.val + 1, 24, 0)
	moveLogs(allg, 'right', speed.val + 1.25, 16, 0)

	moveLogs(turtles1, 'left',speed.val + 1,0,16)
	moveLogs(turtles2, 'left',speed.val + 1.1,0,16)
	moveLogs(blueTurtles, 'left',speed.val + 1,0,16)

	-- Death
	if checkContact then
		carCollision(car1,4,4)
		carCollision(car2,4,4)
		carCollision(car3,4,12)
		carCollision(car4,0,10)
		carCollision(car5,2,7)

		--Hop on log
		checkLogContact()
	end
	-- check frogger coordinates
	checkFroggerXY()
	
	-- check Home
	checkHome()

	animationCycle = animationCycle-1
	if animationCycle == 0 then animationCycle = 240 end

	
end


function TIC()
    cls()
	if titlePage == 1 then
		titleScreen()
	elseif player.lives == 0 and death == 0 then
		gameOver()
	elseif home1 and home2 and home3 and home4 and home5 then
		gameWin()
	else
		itrs = itrs + 1
		print(itrs)
		if itrs > 60 then 
			itrs = 0 
			time = time + 1 
		end
		playGame()
		print("Lives: " ..player.lives,200,128, 0)
		print("High Score: 1356520", 75,1, 0)
		if 60 - time <= 0 then
			player.lives = player.lives - 1
			sfx(0,2,30,0,15,0)
			px = 120 py = 112
			time = 0 
			miny = 112
		end
		print("Time: " .. 60-time, 8, 128, 0)
		print("Score: " .. score, 100,128, 0)

	end

   end


-- <TILES>
-- 002:8888888888888888888888888888888888888888888888888888888888888888
-- 003:6660660660666666666660666660666660666606666606666606606666666666
-- 004:5555555555555555555555555555555555555555555555555555555555555555
-- 005:1111111111111111111111111111111111111111111111111111111111111111
-- 006:5565565556556656656565566565656565665665565656555655656565565556
-- 007:5565565556556656656565566565656556665655522652262882288288888888
-- 008:8825565588256656826565568825656582665655882652268882288288888888
-- 009:5565528865665288655656285656528855656628622562882882288888888888
-- 010:6556565656665556665565665565656556565655655656626566522855655288
-- 011:6565655665556665665655665656565555656565266565568225665688255655
-- 048:0555555555555555555555555555555555556666555560005555600055556000
-- 049:5555550055555550555555565555556666666660000000000000000000000000
-- 050:0555555555555555555555555555555555556666555560005555600055556000
-- 051:5555000055555000555555005555555066655556000555560005555600055556
-- 052:0005555500555555055555555555555555556666555560005555600055556000
-- 053:5555000055555000555555005555555066655556000555560005555600055556
-- 054:0005555500555555055555555555555555556666555560005555600055556000
-- 055:5555000055555000555555005555555066655556000555560005555600055556
-- 056:0555555555555555555555555555555555556666555560005555600055556000
-- 057:5555550055555550555555565555556666666660000000000000000000000000
-- 058:0550000055550000555560005555600055556000555560005555600055556000
-- 064:5555600055556000555560005555600055556000555555555555555555555555
-- 065:0000000000000000000000000000000000000000555555005555555055555556
-- 066:5555600055556000555560005555600055556000555555555555555555555555
-- 067:0005555600055556000555560005555600055556555555565555556055555600
-- 068:5555600055556000555560005555600055556000555560005555600055556000
-- 069:0005555600055556000555560005555600055556000555560005555600055556
-- 070:5555600055556000555560005555600055556000555560005555600055556000
-- 071:0000556600000660000000000000000000000000000000000000000000000000
-- 072:5555600055556000555560005555600055556000555555555555555555555555
-- 073:0000000000000000000000000000000000000000555555005555555055555556
-- 074:5555600055556000555560005555600055556000555560005555600055556000
-- 080:5555555555556666555560005555600055556000555560005555600055556000
-- 081:5555556666666660000000000000000000000000000000000000000000000000
-- 082:5555555555556000555560005555600055556000555560005555600055556000
-- 083:5555550000055550000555560005555600055556000555560005555600055556
-- 084:5555600055556000555560005555600055556000555560005555600055556000
-- 085:0005555600055556000555560005555600055556000555560005555600055556
-- 086:5555600555556055555560555555600555556000555560005555600055556000
-- 087:5555555655555556555555565555555666655556000555560005555600055556
-- 088:5555555555556666555560005555600055556000555560005555600055556000
-- 089:5555556666666660000000000000000000000000000000000000000000000000
-- 090:5555600055556000555560005555600055556000555560005555600005566000
-- 096:5555600055556000555560005555600055556000555560000556600000660000
-- 098:5555600055556000555560005555600055556000555560000556600000660000
-- 099:0005555600055556000555560005555600055556000555560000556600000660
-- 100:5555600055556000555560005555555505555555005555550005555500006666
-- 101:0005555600055556000555565555555655555566555556605555660066666000
-- 102:5555600055556000555560005555555505555555005555550005555500006666
-- 103:0005555600055556000555565555555655555566555556605555660066666000
-- 104:5555600055556000555560005555555555555555555555550555555500666666
-- 105:0000000000000000000000005555550055555550555555565555556666666660
-- 106:0066000000000000000000000550000055550000555560000556600000660000
-- </TILES>

-- <SPRITES>
-- 001:0600006060266206656556560065560060666606656666566605506606066060
-- 002:0000000002200200ccccccc0c555c5ccc555c5ccccccccc00220020000000000
-- 003:00500550011101111111111bb11b111b1111111b011101110050055000000000
-- 004:00000000006066000cc0cccc2cc2cccc2cc2cccc0cc0cccc0060660000000000
-- 005:0000000000660000cccc0000cccc0000cccc0000cccc00000066000000000000
-- 006:0000022000000444000441140044114400044114000004440000022000000000
-- 007:0002220044444400441111004141140044111100444444000002220000000000
-- 008:00000000002c2c2000ccc55c00555c5c00555c5c00ccc55c002c2c2000000000
-- 009:0cc000000c2000005cc000000c2000000c2000005cc000000c2000000cc00000
-- 010:0060060000222200022222206222222062222220022222200022220000600600
-- 011:0060060000222200022222206222222062222220022222200022220000600600
-- 012:0060060000222200022222206222222062222220022222200022220000600600
-- 017:0060060000000000000000000000000000000000000000000000000000000000
-- 033:007777770777ff7777777777777777777777777777ff77770777777700777777
-- 034:777777ff777777f7ff777f7777777f7f77777f7f77ff7f77777777f77777777f
-- 036:0077777707777777777ff777777777777777777777777777077777ff00777777
-- 037:7777777777777ffffff77777777777777777777777ff77777777777f77777777
-- 038:7777777f7ff777f777777f7777777f7f77777f7f77777f77f77ff7f77777777f
-- 039:7777777f7ff777f777777f7777777f7f77777f7f77777f77f77ff7f77777777f
-- 041:007777770777777f7777777777777777777fff77777777770777777700777777
-- 042:77777777ff77777777777777777777777777f777777777777ff7777777777777
-- 043:77777777777777ff7f777777777777777777777777777777fff7777777777777
-- 044:7777777f77ff77f7ff777f7777777f7f77777f7f77777f77ff7777f77777777f
-- 045:7777777f77ff77f7ff777f7777777f7f77777f7f77777f77ff7777f77777777f
-- 065:5555555555555555555555555555555555555555555555555555555555555555
-- 066:5555555555555555555555555555555555555555555555555555555555555555
-- 067:5555555555555555555555555555555555555555555555555555555555555555
-- 068:5555555555555555555555555555555555555555555555555555555555555555
-- 070:0000000000000000000000000000000000033333333333330000000000000000
-- 071:0000000000033333333333333333333333333333333300003333000000000000
-- 072:0000000000003333333300003333333333333333333333333333000000000000
-- 073:0000000000000000333333333333333333330000333333330000000000000000
-- 075:0060060000bbbb000bbbbbb06bbbbbb06bbbbbb00bbbbbb000bbbb0000600600
-- 076:0060060000bbbb000bbbbbb06bbbbbb06bbbbbb00bbbbbb000bbbb0000600600
-- 077:0060060000bbbb000bbbbbb06bbbbbb06bbbbbb00bbbbbb000bbbb0000600600
-- 097:0065560006266260056556506052250666655666656556560656656066066066
-- 099:886956888699626899c556a96cc225c96965569969a5565686969a6888966966
-- 100:888998888899628889aa56688aa225c999cc569989a5c6c9889a9a9888899899
-- 101:88888888889999c889acc9989acbac9989bbbb9989abb9c888ca9a9888899988
-- 103:0066060006560660655666566555655665556556655555560655556000666600
-- 105:0000000000000000000000000000000000033333333333330000000000000000
-- 106:0000000000033333333333333333333333333333333300003333000000000000
-- 107:0000000000003333333300003333333333333333333333333333000000000000
-- 108:0000033300333330333330c03330c0c033000000333333330000000000000000
-- 115:0065560006266260052552506552255666522566656556560656656066066066
-- 116:6065560666266266652552500552255000522500006556000656656066000066
-- 117:0000000000666600052552500052250000055000006556000606606000000000
-- 118:0000000000cccc000c0cc0c000cccc00000cc000000cc0000cccccc0000cc000
-- 145:0600006060000006602662060565565000655600006666006566665665500556
-- 146:0600006060000006602662060565565000655600006666000566665065500556
-- 147:0600006060000006602662060565565000655600006666000066660005500550
-- 148:0600006060000006602662060565565000655600006666000066660005500550
-- 161:6000000665000056060000600000000000000000000000000000000000000000
-- 162:6500005660000006600000066500005606000060000000000000000000000000
-- 163:0650056006000060060000600650056000600600000000000000000000000000
-- 164:0650056000600600006006000060060000500500006006000000000000000000
-- </SPRITES>

-- <MAP>
-- 000:404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 001:40404040a070b06060a070b06060a070b06060a070b06060a070b04040404040404060a07070707070b060606060a07070707070b060a070b0404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 002:404040409020807070902080707090208070709020807070902080404040404040407090202020202080707070709020202020208070902080404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 003:404040402020202020202020202020202020202020202020202020404040404040402020202020202020202020202020202020202020202020404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 004:404040402020202020202020202020202020202020202020202020404040404040402020202020202020202020202020202020202020202020404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 005:404040402020202020202020202020202020202020202020202020404040404040402020202020202020202020202020202020202020202020404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 006:404040402020202020202020202020202020202020202020202020404040404040402020202020202020202020202020202020202020202020404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 007:404040402020202020202020202020202020202020202020202020404040404040402020202020202020202020202020202020202020202020404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 008:404040405050505050505050505050505050505050505050505050404040404040405050505050505050505050505050505050505050505050404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 009:404040401000101010101010101010100000000000000000001010404040404040401010101010101010100000000000000000000000000000404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 010:404040401000000010101010101010001000000000000000001010404040404040401010101010101010100000000000000000000000000000404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 011:404040401000101010000000000010101000000000000000001010404040404040401010101010101010100000000000000000000000000000404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 012:404040401000001010101010101010101010101010101010101010404040404040401010101010000010100000000000000000000000000000404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 013:404040401010101010101010101010101010101010101010101010404040404040401010101010101010100000000000000000000000000000404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 014:404040405050505050505050505050505050505050505050505050404040404040405050505050505050505050505050505050505050505050404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 015:404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 016:404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- </MAP>

-- <WAVES>
-- 000:01234678abcdef0012456789abcdef00
-- 001:000000000000000d9631000000000000
-- 002:08ba986543369ccb965368bb9578ca54
-- 003:1123456789aabcddeeeeeeeeeeefffff
-- </WAVES>

-- <SFX>
-- 000:0200020002500271028202a302c302a302c302e402f402f402f402e402e302d302920260025002400240023002400240024002300230f230f200f200001000000000
-- 001:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000300000000000
-- 002:0310031003200320033003300330034003500350036003600370037003800380039003a003b003b003b003c003c003d003d003d003e003e003f003f0501000000000
-- </SFX>

-- <PALETTE>
-- 000:1a1c2c5d275db13e53ef7d57ffcd75a7f07038b764994c0029366f3b5dc941a6f673eff7f4f4f494b0c2566c86cc660c
-- </PALETTE>

